---
name: Lint and Test Charts
"on":
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main

env:
  python_version: '3.13'

jobs:
  prep_job:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.changed-files.outputs.any_changed }}
      matrix: ${{ steps.result.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: changed-files
        with:
          files: |
            **/*.yaml
            **/*.yml
            **/*.tpl
            .github/
          files_ignore: |
            **/.*md
            .github/CODEOWNERS
            .github/dependabot.yml
            .github/ISSUE_TEMPLATE/*
            .github/workflows/assign_issue.yml

      - run: |
          echo "Has changes: ${{ steps.changed-files.outputs.any_changed }}"
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

          {
            echo "matrix<<EOF"
            echo '{ "include": ['
            [[ "${{ steps.changed-files.outputs.any_changed }}" == 'false' ]] && echo '{ "name": "lint" },'
            echo '{ "name": "k8s-1.33", "kindest_image": "kindest/node:v1.33.1"  },'
            echo '{ "name": "k8s-1.32", "kindest_image": "kindest/node:v1.32.5"  },'
            echo '{ "name": "k8s-1.31", "kindest_image": "kindest/node:v1.31.9"  },'
            echo '{ "name": "k8s-1.30", "kindest_image": "kindest/node:v1.30.13" }'
            echo '] }'
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
        id: result

  test:
    runs-on: ubuntu-latest
    needs: prep_job
    if: ${{ needs.prep_job.outputs.has_changes == 'true' }}
    env:
      # See https://github.com/kubernetes-sigs/kind/releases
      # Check and update the image versions in the prep_job as well when updating this version.
      kind_version: v0.29.0
    strategy:
      matrix: ${{ fromJson(needs.prep_job.outputs.matrix) }}
    name: ${{ matrix.name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.python_version }}

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Lint charts
        run: ct lint --config .github/workflows/conf/ct-lint.yml

      - uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          config: .github/workflows/conf/kind.yml
          version: ${{ env.kind_version }}
          node_image: ${{ matrix.kindest_image }}

      - name: Create chart preconditions
        run: .github/workflows/scripts/chart-test-prep.sh

      - name: Chart installation tests
        run: .github/workflows/scripts/chart-test.sh

      - name: Debug information on failure
        run: kubectl describe nodes; echo "=== API Versions ==="; kubectl api-versions; echo "=== CRDs ==="; kubectl get crd
        if: failure()

  lint:
    runs-on: ubuntu-latest
    needs: prep_job
    if: ${{ needs.prep_job.outputs.has_changes == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.python_version }}

      - name: Run checkov on each test case permutation
        run: .github/workflows/scripts/checkov-chart-linting.sh

  skip:
    runs-on: ubuntu-latest
    needs: prep_job
    if: ${{ needs.prep_job.outputs.has_changes == 'false' }}
    strategy:
      matrix: ${{ fromJson(needs.prep_job.outputs.matrix) }}
    name: ${{ matrix.name }}
    steps:
      - run: |
          echo "Skip ${{ matrix.name }} for this pull request because no relevant files have been changed."
          echo "This is needed to not block the pull request as these are configured as required status check."
